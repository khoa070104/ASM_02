@page
@model StudentNameRazorPages.Pages.Staff.Categories.IndexModel
@{
    ViewData["Title"] = "Manage Categories";
}

<div class="row">
    <div class="col-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/Staff/Dashboard">Staff Dashboard</a></li>
                <li class="breadcrumb-item active" aria-current="page">Categories</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>
                <i class="fas fa-tags me-2"></i>Manage Categories
            </h1>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
                <i class="fas fa-plus me-2"></i>Create Category
            </button>
        </div>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Search -->
<div class="row mb-4">
    <div class="col-md-6">
        <form method="get" class="d-flex">
            <input type="text" name="search" class="form-control me-2" placeholder="Search categories..." value="@Model.SearchTerm">
            <button type="submit" class="btn btn-outline-primary">
                <i class="fas fa-search"></i>
            </button>
        </form>
    </div>
    <div class="col-md-6 text-end">
        <span class="text-muted">Total: @Model.Categories.Count() categories</span>
    </div>
</div>

<!-- Categories List -->
<div class="row">
    @if (Model.Categories.Any())
    {
        @foreach (var category in Model.Categories)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <span class="badge bg-@(category.IsActive ? "success" : "secondary")">
                            @(category.IsActive ? "Active" : "Inactive")
                        </span>
                        @if (category.ParentCategory != null)
                        {
                            <small class="text-muted">Sub-category of @category.ParentCategory.CategoryName</small>
                        }
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@category.CategoryName</h5>
                        @if (!string.IsNullOrEmpty(category.CategoryDescription))
                        {
                            <p class="card-text">@category.CategoryDescription</p>
                        }
                        @if (category.SubCategories.Any())
                        {
                            <small class="text-muted">
                                <i class="fas fa-sitemap me-1"></i>@category.SubCategories.Count() sub-categories
                            </small>
                        }
                    </div>
                    <div class="card-footer">
                        <div class="btn-group w-100" role="group">
                            <button type="button" class="btn btn-outline-warning btn-sm" 
                                    onclick="editCategory(@category.CategoryId, '@category.CategoryName', '@category.CategoryDescription', @category.IsActive.ToString().ToLower(), @(category.ParentCategoryId?.ToString() ?? "null"))">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button type="button" class="btn btn-outline-danger btn-sm" 
                                    onclick="deleteCategory(@category.CategoryId, '@category.CategoryName')">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <div class="alert alert-info text-center">
                <i class="fas fa-info-circle me-2"></i>
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <span>No categories found matching your search.</span>
                    <a href="/Staff/Categories/Index" class="btn btn-outline-primary ms-2">Clear Search</a>
                }
                else
                {
                    <span>No categories available.</span>
                    <button type="button" class="btn btn-primary ms-2" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
                        Create First Category
                    </button>
                }
            </div>
        </div>
    }
</div>

<!-- Create Category Modal -->
<div class="modal fade" id="createCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="Create">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-plus me-2"></i>Create New Category
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="createCategoryName" class="form-label">Category Name *</label>
                        <input type="text" class="form-control" id="createCategoryName" name="CategoryName" required maxlength="100">
                    </div>
                    <div class="mb-3">
                        <label for="createCategoryDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="createCategoryDescription" name="CategoryDescription" rows="3" maxlength="250"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="createParentCategoryId" class="form-label">Parent Category</label>
                        <select class="form-select" id="createParentCategoryId" name="ParentCategoryId">
                            <option value="">None (Root Category)</option>
                            @foreach (var parentCategory in Model.ParentCategories)
                            {
                                <option value="@parentCategory.CategoryId">@parentCategory.CategoryName</option>
                            }
                        </select>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="createIsActive" name="IsActive" checked>
                        <label class="form-check-label" for="createIsActive">
                            Active
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-2"></i>Create Category
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="Edit">
                <input type="hidden" id="editCategoryId" name="CategoryId">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-edit me-2"></i>Edit Category
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editCategoryName" class="form-label">Category Name *</label>
                        <input type="text" class="form-control" id="editCategoryName" name="CategoryName" required maxlength="100">
                    </div>
                    <div class="mb-3">
                        <label for="editCategoryDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editCategoryDescription" name="CategoryDescription" rows="3" maxlength="250"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editParentCategoryId" class="form-label">Parent Category</label>
                        <select class="form-select" id="editParentCategoryId" name="ParentCategoryId">
                            <option value="">None (Root Category)</option>
                            @foreach (var parentCategory in Model.ParentCategories)
                            {
                                <option value="@parentCategory.CategoryId">@parentCategory.CategoryName</option>
                            }
                        </select>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="editIsActive" name="IsActive">
                        <label class="form-check-label" for="editIsActive">
                            Active
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">
                        <i class="fas fa-save me-2"></i>Update Category
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function editCategory(id, name, description, isActive, parentId) {
            document.getElementById('editCategoryId').value = id;
            document.getElementById('editCategoryName').value = name;
            document.getElementById('editCategoryDescription').value = description || '';
            document.getElementById('editIsActive').checked = isActive;
            document.getElementById('editParentCategoryId').value = parentId || '';
            
            var editModal = new bootstrap.Modal(document.getElementById('editCategoryModal'));
            editModal.show();
        }

        function deleteCategory(id, name) {
            Swal.fire({
                title: 'Are you sure?',
                text: `Delete category "${name}"? This action cannot be undone.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Create a form and submit it
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = '/Staff/Categories/Index?handler=Delete';
                    
                    // Add category ID
                    const idInput = document.createElement('input');
                    idInput.type = 'hidden';
                    idInput.name = 'categoryId';
                    idInput.value = id;
                    form.appendChild(idInput);
                    
                    // Add anti-forgery token
                    const token = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (token) {
                        const hiddenToken = document.createElement('input');
                        hiddenToken.type = 'hidden';
                        hiddenToken.name = '__RequestVerificationToken';
                        hiddenToken.value = token.value;
                        form.appendChild(hiddenToken);
                    }
                    
                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }
    </script>
}
